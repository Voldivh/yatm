requirements:
  - name: Check action Cli
    labels:
      - ros2cli
      - feature
      - ros2action
    checks:
      - name: Check info
        try:
          - stdin: ros2 action info
      - name: Check list
        try:
          - stdin: ros2 action list
      - name: Check send_goal
        try:
          - stdin: ros2 action send_goal

  - name: Check ROS 2 bag CLI
    labels:
      - ros2cli
      - feature
      - ros2bag
    checks:
      - name: Check info
        try:
          - stdin: ros2 bag info
      - name: Check record
        try:
          - stdin: ros2 bag record
      - name: Check play
        try:
          - stdin: ros2 bag play

  - name: Check ROS 2 component CLI
    labels:
      - ros2cli
      - feature
      - ros2component
    checks:
      - name: Check info
        try:
          - stdin: ros2 component info
      - name: Check list
        try:
          - stdin: ros2 component list
      - name: Check load
        try:
          - stdin: ros2 component load
      - name: Check standalone
        try:
          - stdin: ros2 component standalone
      - name: Check types
        try:
          - stdin: ros2 component types
      - name: Check unload
        try:
          - stdin: ros2 component unload

  - name: Check ROS 2 daemon CLI
    labels:
      - ros2cli
      - feature
      - ros2daemon
    checks:
      - name: Check start
        try:
          - stdin: ros2 daemon start
      - name: Check status
        try:
          - stdin: ros2 daemon status
      - name: Check stop
        try:
          - stdin: ros2 daemon stop

  - name: Check ROS 2 doctor CLI
    labels:
      - ros2cli
      - feature
      - ros2doctor
    checks:
      - name: Check `-r`
        try:
          - stdin: ros2 doctor -r
      - name: Check `-rf`
        try:
          - stdin: ros2 doctor -rf
      - name: Check `-iw`
        try:
          - stdin: ros2 doctor -iw
      - name: Check hello
        try:
          - stdin: ros2 doctor hello

  - name: Check ROS 2 wtf CLI
    labels:
      - ros2cli
      - feature
      - ros2wtf
    description: '`ros2 wtf` is an alias for `ros2 doctor`.'
    checks:
      - name: Check `-r`
        try:
          - stdin: ros2 wtf -r
      - name: Check `-rf`
        try:
          - stdin: ros2 wtf -rf
      - name: Check `-iw`
        try:
          - stdin: ros2 wtf -iw
      - name: Check hello
        try:
          - stdin: ros2 wtf hello

  - name: Check ROS 2 interface CLI
    labels:
      - ros2cli
      - feature
      - ros2interface
    checks:
      - name: Check list
        try:
          - stdin: ros2 interface list
      - name: Check package
        try:
          - stdin: ros2 interface package
      - name: Check packages
        try:
          - stdin: ros2 interface packages
      - name: Check proto
        try:
          - stdin: ros2 interface proto
      - name: Check show
        try:
          - stdin: ros2 interface show

  - name: Check ROS 2 launch CLI
    labels:
      - ros2cli
      - feature
      - ros2launch
    checks:
      - name: Check launch package
        try:
          - stdin: ros2 launch demo_nodes_cpp talker_listener.launch.py
        expect:
          - note: You should see something like the following
            stdout: |
              [INFO] [launch]: All log files can be found below /home/parallels/.ros/log/2022-03-21-17-38-54-737866-parallels-Parallels-Virtual-Platform-3717
              [INFO] [launch]: Default logging verbosity is set to INFO
              [INFO] [talker-1]: process started with pid [3722]
              [INFO] [listener-2]: process started with pid [3724]
              [talker-1] [INFO] [1647909535.937731548] [talker]: Publishing: 'Hello World: 1'
              [listener-2] [INFO] [1647909535.938337387] [listener]: I heard: [Hello World: 1]
              [talker-1] [INFO] [1647909536.937932068] [talker]: Publishing: 'Hello World: 2'
              [listener-2] [INFO] [1647909536.938125486] [listener]: I heard: [Hello World: 2]
              [talker-1] [INFO] [1647909537.936162331] [talker]: Publishing: 'Hello World: 3'
              [listener-2] [INFO] [1647909537.936366391] [listener]: I heard: [Hello World: 3]
              ...

      - name: Check launch launch file directly
        try:
          - stdin: curl https://raw.githubusercontent.com/ros2/demos/master/demo_nodes_cpp/launch/topics/talker_listener.launch.py > /tmp/talker_listener.launch.py
            note: Download a launch file, for example with `curl`.
          - stdin: ros2 launch /tmp/talker_listener.launch.py
        expect:
          - note: You should see something like the following
            stdout: |
              [INFO] [launch]: All log files can be found below /home/parallels/.ros/log/2022-03-21-17-38-54-737866-parallels-Parallels-Virtual-Platform-3717
              [INFO] [launch]: Default logging verbosity is set to INFO
              [INFO] [talker-1]: process started with pid [3722]
              [INFO] [listener-2]: process started with pid [3724]
              [talker-1] [INFO] [1647909535.937731548] [talker]: Publishing: 'Hello World: 1'
              [listener-2] [INFO] [1647909535.938337387] [listener]: I heard: [Hello World: 1]
              [talker-1] [INFO] [1647909536.937932068] [talker]: Publishing: 'Hello World: 2'
              [listener-2] [INFO] [1647909536.938125486] [listener]: I heard: [Hello World: 2]
              [talker-1] [INFO] [1647909537.936162331] [talker]: Publishing: 'Hello World: 3'
              [listener-2] [INFO] [1647909537.936366391] [listener]: I heard: [Hello World: 3]
              ...

  - name: Check ROS 2 Multicast CLI
    labels:
      - ros2cli
      - feature
      - ros2multicast
    checks:
      - name: Check receive
        try:
          - stdin: ros2 multicast receive
      - name: Check send
        try:
          - stdin: ros2 multicast send

  - name: Check ROS 2 Node CLI
    labels:
      - ros2cli
      - feature
      - ros2node
    checks:
      - name: Check info
        try:
          - stdin: ros2 launch demo_nodes_cpp talker_listener.launch.py
            note: Launch a node
            terminal: 1
          - stdin: ros2 node info /talker
            terminal: 2
            note: Get the info for the `talker` that was launched.
        expect:
          - terminal: 2
            note: You should see something similar to the following
            stdout: |
              Subscribers:
                /parameter_events: rcl_interfaces/msg/ParameterEvent
              Publishers:
                /chatter: std_msgs/msg/String
                /parameter_events: rcl_interfaces/msg/ParameterEvent
                /rosout: rcl_interfaces/msg/Log
              Service Servers:
                /talker/describe_parameters: rcl_interfaces/srv/DescribeParameters
                /talker/get_parameter_types: rcl_interfaces/srv/GetParameterTypes
                /talker/get_parameters: rcl_interfaces/srv/GetParameters
                /talker/list_parameters: rcl_interfaces/srv/ListParameters
                /talker/set_parameters: rcl_interfaces/srv/SetParameters
                /talker/set_parameters_atomically: rcl_interfaces/srv/SetParametersAtomically
              Service Clients:

              Action Servers:

              Action Clients:
      - name: Check list
        try:
          - stdin: ros2 launch demo_nodes_cpp talker_listener.launch.py
            note: Launch a node
            terminal: 1
          - stdin: ros2 node list
            terminal: 2
        expect:
          - terminal: 2
            stdout: |
              /listener
              /talker

  - name: Check ROS 2 Param CLI
    labels:
      - ros2cli
      - feature
      - ros2param
    checks:
      - name: Check delete
        try:
          - stdin: ros2 param delete
      - name: Check describe
        try:
          - stdin: ros2 param describe
      - name: Check dump
        try:
          - stdin: ros2 param dump
      - name: Check dump
        try:
          - stdin: ros2 param dump
      - name: Check get
        try:
          - stdin: ros2 param get
      - name: Check list
        try:
          - stdin: ros2 param list
      - name: Check set
        try:
          - stdin: ros2 param set

  - name: Check ROS 2 Pkg CLI
    labels:
      - ros2cli
      - feature
      - ros2pkg
    checks:
      - name: Check create
        try:
          - stdin: ros2 pkg create
      - name: Check executables
        try:
          - stdin: ros2 pkg executables
      - name: Check list
        try:
          - stdin: ros2 pkg list
      - name: Check prefix
        try:
          - stdin: ros2 pkg prefix
      - name: Check xml
        try:
          - stdin: ros2 pkg xml

  - name: Check ROS 2 run CLI
    labels:
      - ros2cli
      - feature
      - ros2run
    checks:
      - name: Check run
        try:
          - stdin: ros2 run <package> <executable>
      - name: Check run with prefix
        try:
          - stdin: ros2 run <package> <executable> --prefix

  - name: Check ROS 2 security CLI on Linux
    labels:
      - ros2cli
      - feature
      - ros2security
      - linux
    links:
      - name: Tutorial URL
        url: https://github.com/ros2/sros2/blob/master/SROS2_Linux.md
    checks:
      - name: The Linux tutorials work

  - name: Check ROS 2 security CLI on Windows
    labels:
      - ros2cli
      - feature
      - ros2security
      - windows
    links:
      - name: Tutorial URL
        url: https://github.com/ros2/sros2/blob/master/SROS2_Windows.md
    checks:
      - name: The Linux tutorials work

  - name: Check ROS 2 service CLI
    labels:
      - ros2cli
      - feature
      - ros2service
    checks:
      - name: Check call
        try:
          - stdin: ros2 service call
      - name: Check find
        try:
          - stdin: ros2 service find
      - name: Check list
        try:
          - stdin: ros2 service list
      - name: Check type
        try:
          - stdin: ros2 service type

  - name: Check ROS 2 test CLI
    labels:
      - ros2cli
      - feature
      - ros2test
    checks:
      - name: Check
        try:
          - stdin: ros2 test <package> <test launch file>

  - name: Check ROS 2 topic CLI
    labels:
      - ros2cli
      - feature
      - ros2topic
    checks:
      - name: Check bw
        try:
          - stdin: ros2 service bw
      - name: Check delay
        try:
          - stdin: ros2 service delay
      - name: Check echo
        try:
          - stdin: ros2 service echo
      - name: Check find
        try:
          - stdin: ros2 service find
      - name: Check hz
        try:
          - stdin: ros2 service hz
      - name: Check info
        try:
          - stdin: ros2 service info
      - name: Check list
        try:
          - stdin: ros2 service list
      - name: Check pub
        try:
          - stdin: ros2 service pub
      - name: Check type
        try:
          - stdin: ros2 service type

  - name: Check ROS 2 trace CLI
    labels:
      - ros2cli
      - feature
      - ros2trace
    checks:
      - name: Check
        try:
          - stdin: ros2 trace
